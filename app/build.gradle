apply plugin: 'com.android.application'

def releaseTime() {
    return new Date().format("yyyyMMddhhmmss", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        applicationId "cn.walkpast.captionbar"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    signingConfigs {
        debug {
            keyAlias 'captionbar'
            keyPassword 'admin580'
            storeFile file('D:/BrowserProject/CaptionBar/app/keystore/keystore_release.jks')
            //storeFile file('D:/BrowserProject/CaptionBar/app/keystore/keystore_release.jks')
            storePassword 'admin580'
        }

        release {
            keyAlias 'captionbar'
            keyPassword 'admin580'
            storeFile file('D:/BrowserProject/CaptionBar/app/keystore/keystore_release.jks')
            //storeFile file('D:/BrowserProject/CaptionBar/app/keystore/keystore_release.jks')
            storePassword 'admin580'
        }
    }

    flavorDimensions 'default'
    productFlavors {
        official { dimension "default" }
    }

    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "caption_v${variant.versionName}_${variant.flavorName}_${releaseTime()}.apk"
                }
            }
        }

        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "caption_v${variant.versionName}_${variant.buildType.name}_${variant.flavorName}_${releaseTime()}.apk"
                }
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    compile "com.android.support:design:$rootProject.supportLibraryVersion"

    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    implementation project(':caption')
}
